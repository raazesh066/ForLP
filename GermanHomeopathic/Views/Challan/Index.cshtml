@model GermanHomeopathic.Models.ChallanViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    

}


@using (Html.BeginForm())
{
    <div class="col-sm-9 col-xs-12">
        <div class="page-heading">Challan</div>
        <div class="right-bar">
             <div>@Html.ValidationSummary(true)</div>


         <div class="row form-group">
                <div class="col-xs-12 col-sm-4">
            @Html.LabelFor(m => m.Customer) <span class="clr-red">*</span>
        

        
            @Html.DropDownListFor(m => m.CustomerId, new SelectList(Model.Customer.Customers, "CustomerId", "CustomerName"), "--Select--", new { @class = "form-control input-sm" })
            @Html.HiddenFor(m => m.CustomerId)
                    @Html.ValidationMessageFor(m=>m.CustomerId)
        </div>
            

          <div class="col-xs-12 col-sm-4">@Html.LabelFor(m => m.Customer.CustomerAddress)
       @Html.TextBoxFor(m => m.Customer.CustomerAddress, new { disabled = "disabled", @class = "form-control input-sm " })</div>
       
          <div class="col-xs-12 col-sm-4">@Html.Label("Company Location") <span class="clr-red">*</span><br/>
     

        @Html.RadioButtonFor(m => m.CompanyId, 1, new { @checked = "true" })  Delhi &nbsp; &nbsp;
          @Html.RadioButtonFor(m => m.CompanyId, 2)  Ghaziabad
            </div>
            </div>
             </div>
        <div class="table-responsive">
                <table class="table table-bordered table-striped">
            <tr>
                <th>Category Name</th>
                <th>Rate</th>
                <th>Discount</th>
                <th>Quantity</th>
                <th>Total Amount</th>
            </tr>
            @for (var i = 0; i < Model.lstChallanDetails.Count; i++)
            {
                <tr>
                    @Html.HiddenFor(m => Model.lstChallanDetails[i].CategoryId)
                    @Html.HiddenFor(m => Model.lstChallanDetails[i].Rate)
                    <td>@Model.lstChallanDetails[i].CategoryName</td>
                    <td>@Model.lstChallanDetails[i].Rate</td>
                    <td>@Html.TextBoxFor(m => Model.lstChallanDetails[i].Discount, new { @class = "discount" })</td>
                    <td>@Html.TextBoxFor(m => Model.lstChallanDetails[i].Quantity, new { @class = "quantity" })</td>
                    <td>@Html.TextBoxFor(m => Model.lstChallanDetails[i].TotalAmount, new { disabled = "disabled", @class = "totalamount" })</td>
                </tr>
            }
        </table>
            </div>
        <div class="row no-margin">
        <div class="col-sm-12 col-xs-12 text-right">
            Grand Total :@Html.TextBoxFor(m => m.AmountWithoutTax, new { disabled = "disabled" })
        </div>
            </div>
        <div class="table-responsive">
                <table class="table table-bordered table-striped">
            <tr>
                <td>E.CESS (%): </td>
                <td>@Html.TextBoxFor(m => m.ecess)</td>
                <td>S.H.E.CESS (%): </td>
                <td>@Html.TextBoxFor(m => m.shecess)</td>
            </tr>
            <tr>

                <td><span id="cstVat">CST/VAT</span> (%): </td>
                <td>@Html.TextBoxFor(m => m.cst)</td>
            </tr>
            <tr>
                <td>Freight (%): </td>
                <td>@Html.TextBoxFor(m => m.freight)</td>
                <td>TCS (%): </td>
                <td>@Html.TextBoxFor(m => m.tcs)</td>
            </tr>

        </table>
            </div>
          <div class="row no-margin">
        <div class="col-sm-12 col-xs-12 text-right">
            <div class="col-sm-10 form-group" style="position:relative; right: 27px;">@Html.Label("Tax Amount :")</div><div id="taxamount" class="col-sm-2"></div>
            
            

               <div class="col-sm-10" style="position:relative; right: 27px;">@Html.Label("Total Amount :") </div><div id="totalAmount" class="col-sm-2"></div>
         
        </div>
              </div>
        <div class="row">
        <div class="col-sm-2 col-xs-12" style="width:auto">@Html.LabelFor(m => m.Remarks)</div>
        <div class="col-sm-6 col-xs-12">@Html.TextBoxFor(m => m.Remarks, new { @class = "form-control input-sm" })</div>
            </div>
       <div class="text-right">
            <input type="submit"  value="Submit" class="btns" />
        </div>
      
    </div>
         

}


@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script>
        
        $('.discount').change(function () {
            $(this).closest('tr').children('td:eq(3)').find(':first-child').change();
        });

        $(".quantity").change(function () {
            var val1 = parseFloat($(this).closest('tr').children('td:eq(1)').text()); //get rate
            var val2 = parseFloat($(this).closest('tr').children('td:eq(3)').find(':first-child').val()); //get quantity

            var val3 = val1 * val2;

            var val4 = parseFloat($(this).closest('tr').children('td:eq(2)').find(':first-child').val()); // get discount
            var val5 = val3 - ((val3 * val4) / 100);

            $($(this).closest('tr').children('td:eq(4)').find(':first-child')).val(val5); //set total amount for this row
            var totalAmount = 0;
            $('.table tbody tr').each(function () {
                var amt = $(this).closest('tr').children('td:eq(4)').find(':first-child').val();
                if (typeof amt != 'undefined') {
                    totalAmount += parseFloat(amt);
                }
            });
            $('#AmountWithoutTax').val(totalAmount); //show grand total
            var ecess = (totalAmount * $('#ecess').val()) / 100;
            var shecess = (totalAmount * $('#shecess').val()) / 100;
            var tcs = (totalAmount * $('#tcs').val()) / 100;
            var freight = (totalAmount * $('#freight').val()) / 100;
            var vat = (totalAmount * $('#cst').val()) / 100;

            $('#taxamount').html((ecess + shecess + tcs + freight + vat).toFixed(2)); //show tax amount
            $('#totalAmount').html((totalAmount+ecess + shecess + tcs + freight + vat).toFixed(2)); //show total amount
        });
        //bind customer value on change of customer dropdown
        $('#CustomerId').change(function () {
            var customerId = $('#CustomerId').val(); //Get customer id
            if (customerId != "0") {
                $.ajax({
                    url: '@Url.Action("ReadCustomerDetailsById", "Challan")',//call ReadCustomerDetailsById ActionMethod of Challan controller
                    data: { 'customerId': customerId },//set customer id in parameter
                    async: false,
                    type: "Post",
                    success: function (customerDetails) {
                        $("#Customer_CustomerAddress").val(customerDetails.CustomerAddress);//Set Customer Address
                        $("#cstVat").html(customerDetails.tax.TaxName) //Set tax name
                        $("#cst").val(customerDetails.tax.Value); //set tax value
                    }
                });
            }
        });

    </script>
        <script>
            $(document).ready(function () {
                $(".Challan").addClass("active-item");
                if ('@TempData["SuccessMsg"]' != "") {
                    alert('@TempData["SuccessMsg"]');
            }
            });
     </script>  
}